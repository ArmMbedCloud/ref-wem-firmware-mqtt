From 2dfd33951d12854d83fcf71da5ae3640709c3c2e Mon Sep 17 00:00:00 2001
From: Nic Costa <nic.costa@arm.com>
Date: Tue, 24 Apr 2018 13:33:19 -0500
Subject: [PATCH] use SlicingBlockDevice to partition SPI Flash

Limit the size of the BlockDevice provided to the update-client
to correspond to the first slice of the underlying SPI Flash.

Signed-off-by: Nic Costa <nic.costa@arm.com>
---
 mbed_app.json   |  2 +-
 source/main.cpp | 10 +++++++++-
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/mbed_app.json b/mbed_app.json
index 9066691..eabe5d5 100755
--- a/mbed_app.json
+++ b/mbed_app.json
@@ -62,7 +62,7 @@
             "target.features_add"   : ["COMMON_PAL"],
             "platform.stdio-baud-rate"    : 115200,
             "platform.stdio-flush-at-exit": false,
-            "update-client.storage-address"  : "(1024*1024*2)",
+            "update-client.storage-address"  : "0",
             "update-client.storage-size"     : "(1024*1024*2)",
             "update-client.storage-locations": 1,
             "update-client.firmware-header-version": "2"
diff --git a/source/main.cpp b/source/main.cpp
index 27cfdf9..0cb94f3 100755
--- a/source/main.cpp
+++ b/source/main.cpp
@@ -57,6 +57,7 @@ extern ARM_UC_PAAL_UPDATE MBED_CLOUD_CLIENT_UPDATE_STORAGE;
 
 #if MBED_CLOUD_CLIENT_UPDATE_STORAGE == ARM_UCP_FLASHIAP_BLOCKDEVICE
 #include <SPIFBlockDevice.h>
+#include <SlicingBlockDevice.h>
 
 /* initialise blockdevice */
 SPIFBlockDevice sd(MBED_CONF_APP_SPI_MOSI,
@@ -64,11 +65,18 @@ SPIFBlockDevice sd(MBED_CONF_APP_SPI_MOSI,
                    MBED_CONF_APP_SPI_CLK,
                    MBED_CONF_APP_SPI_CS);
 
-BlockDevice* arm_uc_blockdevice = &sd;
+SlicingBlockDevice slice1(&sd,
+                          MBED_CONF_UPDATE_CLIENT_STORAGE_ADDRESS,
+                          (MBED_CONF_UPDATE_CLIENT_STORAGE_SIZE *
+                              MBED_CONF_UPDATE_CLIENT_STORAGE_LOCATIONS));
+
+BlockDevice *arm_uc_blockdevice = &slice1;
 #endif
 
 int main(void)
 {
+    slice1.init();
+
     /* Use malloc to allocate uint64_t version number on the heap */
     heapVersion = (uint64_t*) malloc(sizeof(uint64_t));
     bootCounter = (uint8_t*) malloc(1);
-- 
2.17.0

